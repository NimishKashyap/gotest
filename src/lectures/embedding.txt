type Whisperer interface {
    Whisper() string
}
type Yeller interface {[
    Yell() string
]}

type Talker interface {
    Whisperer
    Yeller
}
func talk(t Talker) {
    fmt.Println(t.Yell())
    fmt.Println(t.Whisper())
}

// embedded struct embded struct into another struct
type Account struct {
    accoundId int 
    balance int 
    name string
}

type ManagerAccount string {
    Account
}

mgrAcct := ManagerAccount{Account{2,30,"Cassendra"}}

func (a *Account) GetBalance() int {
    return a.balance;
}

func (a Account) String() string {
    return fmt.Sprintf("Standard ")
}

func (m ManagerAccount) String() string {
    return fmt.Sprintf()
}